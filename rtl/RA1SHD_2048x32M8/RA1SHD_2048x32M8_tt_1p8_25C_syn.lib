/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2018  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single Port SRAM Generator
 *           			CL018HV Process
 *      version:		2006Q4V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_2048x32M8" -words 2048 -bits 32 -frequency 100 -ring_width 2 -mux 8 -drive 12 -write_mask on -wp_size 8 -top_layer met5 -power_type rings -horiz met4 -vert met3 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,VSS:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm off -libname "sramsp_tsmc_cl018hv"
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   sramsp_tsmc_cl018hv
 *      Instance Name:  RA1SHD_2048x32M8
 *      Words:          2048
 *      Word Width:     32
 *      Mux:            8
 *      Pipeline:       No
 *      Process:        tt_1p8_25C
 *      Delays:		max
 *
 *      Creation Date:  2018-03-22 16:53:52Z
 *      Version:        2006Q4V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(sramsp_tsmc_cl018hv) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2018-03-22 16:53:52Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2018 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 25.000;
	nom_voltage		: 1.800;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 2.800;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(tt_1p8_25C) {
		process	 : 1;
		temperature	 : 25.000;
		voltage	 : 1.800;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : tt_1p8_25C;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD_2048x32M8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x32M8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x32M8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_2048x32M8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_2048x32M8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 32;
		bit_from : 31;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x32M8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 11;
		bit_from : 10;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x32M8_WRITE) {
		base_type : array ;
		data_type : bit ;
		bit_width : 4;
		bit_from : 3;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_2048x32M8) {
	area		 : 401443.591;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 11;
		word_width : 32;
	}
	bus(Q)	 {
		bus_type : RA1SHD_2048x32M8_DATA;
		direction : output;
		max_capacitance : 3.422;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "1.601, 1.620, 1.678, 1.798, 2.000, 2.605, 3.235", \
			  "1.609, 1.629, 1.686, 1.806, 2.008, 2.614, 3.243", \
			  "1.641, 1.661, 1.718, 1.838, 2.040, 2.646, 3.275", \
			  "1.705, 1.724, 1.782, 1.902, 2.104, 2.709, 3.339", \
			  "1.812, 1.831, 1.889, 2.009, 2.210, 2.816, 3.445", \
			  "2.025, 2.044, 2.101, 2.222, 2.423, 3.029, 3.658", \
			  "2.195, 2.214, 2.272, 2.392, 2.594, 3.199, 3.829" \
			)
			}
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.063, 0.102, 0.218, 0.461, 0.869, 2.092, 3.364")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "1.605, 1.617, 1.652, 1.725, 1.848, 2.217, 2.600", \
			  "1.614, 1.625, 1.661, 1.734, 1.857, 2.225, 2.609", \
			  "1.646, 1.657, 1.693, 1.766, 1.889, 2.257, 2.641", \
			  "1.710, 1.721, 1.756, 1.830, 1.952, 2.321, 2.704", \
			  "1.816, 1.828, 1.863, 1.936, 2.059, 2.428, 2.811", \
			  "2.029, 2.041, 2.076, 2.149, 2.272, 2.641, 3.024", \
			  "2.199, 2.211, 2.246, 2.319, 2.442, 2.811, 3.194" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.050, 0.068, 0.123, 0.238, 0.431, 1.008, 1.609")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.778, 0.778, 0.778, 0.806, 1.008, 1.613, 2.242", \
			  "0.781, 0.781, 0.781, 0.812, 1.013, 1.619, 2.248", \
			  "0.791, 0.791, 0.791, 0.834, 1.036, 1.641, 2.271", \
			  "0.812, 0.812, 0.812, 0.878, 1.080, 1.686, 2.315", \
			  "0.846, 0.846, 0.846, 0.952, 1.154, 1.760, 2.389", \
			  "0.915, 0.923, 0.980, 1.101, 1.302, 1.908, 2.537", \
			  "1.022, 1.041, 1.099, 1.219, 1.421, 2.026, 2.656" \
			)
                       }
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.063, 0.102, 0.218, 0.461, 0.869, 2.092, 3.364")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.778, 0.778, 0.778, 0.778, 0.786, 1.155, 1.538", \
			  "0.781, 0.781, 0.781, 0.781, 0.792, 1.161, 1.544", \
			  "0.791, 0.791, 0.791, 0.791, 0.814, 1.183, 1.566", \
			  "0.812, 0.812, 0.812, 0.812, 0.859, 1.227, 1.611", \
			  "0.846, 0.846, 0.846, 0.846, 0.933, 1.301, 1.685", \
			  "0.915, 0.915, 0.915, 0.958, 1.081, 1.450, 1.833", \
			  "0.969, 0.969, 1.003, 1.077, 1.199, 1.568, 1.951" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.050, 0.068, 0.123, 0.238, 0.431, 1.008, 1.609")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.778, 0.778, 0.778, 0.806, 1.008, 1.613, 2.242", \
			  "0.781, 0.781, 0.781, 0.812, 1.013, 1.619, 2.248", \
			  "0.791, 0.791, 0.791, 0.834, 1.036, 1.641, 2.271", \
			  "0.812, 0.812, 0.812, 0.878, 1.080, 1.686, 2.315", \
			  "0.846, 0.846, 0.846, 0.952, 1.154, 1.760, 2.389", \
			  "0.915, 0.923, 0.980, 1.101, 1.302, 1.908, 2.537", \
			  "1.022, 1.041, 1.099, 1.219, 1.421, 2.026, 2.656" \
			)
                       }
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.063, 0.102, 0.218, 0.461, 0.869, 2.092, 3.364")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.778, 0.778, 0.778, 0.778, 0.786, 1.155, 1.538", \
			  "0.781, 0.781, 0.781, 0.781, 0.792, 1.161, 1.544", \
			  "0.791, 0.791, 0.791, 0.791, 0.814, 1.183, 1.566", \
			  "0.812, 0.812, 0.812, 0.812, 0.859, 1.227, 1.611", \
			  "0.846, 0.846, 0.846, 0.846, 0.933, 1.301, 1.685", \
			  "0.915, 0.915, 0.915, 0.958, 1.081, 1.450, 1.833", \
			  "0.969, 0.969, 1.003, 1.077, 1.199, 1.568, 1.951" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.050, 0.068, 0.123, 0.238, 0.431, 1.008, 1.609")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.283
		clock	: true;
		min_pulse_width_low	: 0.233;
		min_pulse_width_high	: 0.126;
		min_period		: 1.616;
		max_transition		: 2.800;
		internal_power(){
			when : "(!CEN \
                                 & WEN[3] \
                                 & WEN[2] \
                                 & WEN[1] \
                                 & WEN[0] \
                        	)";
			rise_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("165.385, 165.385")
        		}
			fall_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
            		when : "(!CEN & !( \
                            	WEN[3] & \
                            	WEN[2] & \
                            	WEN[1] & \
                            	WEN[0]))";
        		rise_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("227.350, 227.350")
        		}
        		fall_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.104, 0.104")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.014;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.517, 0.518, 0.521, 0.526, 0.536, 0.590, 0.675", \
			  "0.509, 0.510, 0.512, 0.518, 0.527, 0.582, 0.667", \
			  "0.477, 0.478, 0.480, 0.486, 0.495, 0.550, 0.635", \
			  "0.413, 0.414, 0.417, 0.422, 0.431, 0.486, 0.571", \
			  "0.307, 0.307, 0.310, 0.316, 0.325, 0.379, 0.464", \
			  "0.094, 0.094, 0.097, 0.103, 0.112, 0.166, 0.252", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.081" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.517, 0.518, 0.521, 0.526, 0.536, 0.590, 0.675", \
			  "0.509, 0.510, 0.512, 0.518, 0.527, 0.582, 0.667", \
			  "0.477, 0.478, 0.480, 0.486, 0.495, 0.550, 0.635", \
			  "0.413, 0.414, 0.417, 0.422, 0.431, 0.486, 0.571", \
			  "0.307, 0.307, 0.310, 0.316, 0.325, 0.379, 0.464", \
			  "0.094, 0.094, 0.097, 0.103, 0.112, 0.166, 0.252", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.081" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.044, 0.043, 0.041, 0.035, 0.026, 0.007, 0.000", \
			  "0.151, 0.150, 0.147, 0.141, 0.132, 0.114, 0.099", \
			  "0.363, 0.363, 0.360, 0.354, 0.345, 0.327, 0.312", \
			  "0.534, 0.533, 0.530, 0.525, 0.515, 0.497, 0.482" \
			)
				
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.044, 0.043, 0.041, 0.035, 0.026, 0.007, 0.000", \
			  "0.151, 0.150, 0.147, 0.141, 0.132, 0.114, 0.099", \
			  "0.363, 0.363, 0.360, 0.354, 0.345, 0.327, 0.312", \
			  "0.534, 0.533, 0.530, 0.525, 0.515, 0.497, 0.482" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	bus(WEN)	 {
		bus_type : RA1SHD_2048x32M8_WRITE;
		direction : input;
		capacitance : 0.136;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.460, 0.462, 0.472, 0.491, 0.523, 0.645, 0.744", \
			  "0.451, 0.454, 0.463, 0.483, 0.514, 0.636, 0.735", \
			  "0.419, 0.422, 0.431, 0.451, 0.483, 0.604, 0.703", \
			  "0.355, 0.358, 0.368, 0.387, 0.419, 0.540, 0.639", \
			  "0.249, 0.251, 0.261, 0.280, 0.312, 0.434, 0.533", \
			  "0.076, 0.079, 0.088, 0.108, 0.153, 0.277, 0.376", \
			  "0.076, 0.079, 0.088, 0.108, 0.153, 0.277, 0.376" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.460, 0.462, 0.472, 0.491, 0.523, 0.645, 0.744", \
			  "0.451, 0.454, 0.463, 0.483, 0.514, 0.636, 0.735", \
			  "0.419, 0.422, 0.431, 0.451, 0.483, 0.604, 0.703", \
			  "0.355, 0.358, 0.368, 0.387, 0.419, 0.540, 0.639", \
			  "0.249, 0.251, 0.261, 0.280, 0.312, 0.434, 0.533", \
			  "0.076, 0.079, 0.088, 0.108, 0.153, 0.277, 0.376", \
			  "0.076, 0.079, 0.088, 0.108, 0.153, 0.277, 0.376" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.045, 0.043, 0.033, 0.014, 0.000, 0.000, 0.000", \
			  "0.216, 0.213, 0.203, 0.184, 0.152, 0.088, 0.037" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.045, 0.043, 0.033, 0.014, 0.000, 0.000, 0.000", \
			  "0.216, 0.213, 0.203, 0.184, 0.152, 0.088, 0.037" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD_2048x32M8_ADDRESS;
		direction : input;
		capacitance : 0.047;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.528, 0.530, 0.539, 0.555, 0.581, 0.635, 0.678", \
			  "0.520, 0.522, 0.530, 0.546, 0.573, 0.626, 0.669", \
			  "0.488, 0.490, 0.498, 0.514, 0.541, 0.594, 0.637", \
			  "0.424, 0.426, 0.434, 0.450, 0.477, 0.531, 0.573", \
			  "0.318, 0.320, 0.328, 0.344, 0.371, 0.424, 0.467", \
			  "0.105, 0.107, 0.115, 0.131, 0.158, 0.211, 0.254", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.041, 0.084" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.528, 0.530, 0.539, 0.555, 0.581, 0.635, 0.678", \
			  "0.520, 0.522, 0.530, 0.546, 0.573, 0.626, 0.669", \
			  "0.488, 0.490, 0.498, 0.514, 0.541, 0.594, 0.637", \
			  "0.424, 0.426, 0.434, 0.450, 0.477, 0.531, 0.573", \
			  "0.318, 0.320, 0.328, 0.344, 0.371, 0.424, 0.467", \
			  "0.105, 0.107, 0.115, 0.131, 0.158, 0.211, 0.254", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.041, 0.084" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.030, 0.028, 0.020, 0.004, 0.000, 0.000, 0.000", \
			  "0.094, 0.092, 0.084, 0.068, 0.041, 0.000, 0.000", \
			  "0.200, 0.198, 0.190, 0.174, 0.147, 0.094, 0.051", \
			  "0.413, 0.411, 0.403, 0.387, 0.360, 0.307, 0.264", \
			  "0.583, 0.581, 0.573, 0.557, 0.530, 0.477, 0.434" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.006, 0.003, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.038, 0.035, 0.023, 0.000, 0.000, 0.000, 0.000", \
			  "0.102, 0.099, 0.087, 0.062, 0.021, 0.000, 0.000", \
			  "0.209, 0.205, 0.193, 0.168, 0.127, 0.045, 0.000", \
			  "0.422, 0.418, 0.406, 0.381, 0.340, 0.258, 0.192", \
			  "0.592, 0.589, 0.576, 0.552, 0.511, 0.428, 0.363" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("1.937, 1.937")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD_2048x32M8_DATA;
		direction : input;
		capacitance : 0.003;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "2.825, 2.828, 2.838, 2.858, 2.891, 2.957, 3.010", \
			  "2.817, 2.819, 2.829, 2.849, 2.882, 2.949, 3.002", \
			  "2.785, 2.788, 2.797, 2.817, 2.850, 2.917, 2.970", \
			  "2.721, 2.724, 2.734, 2.753, 2.787, 2.853, 2.906", \
			  "2.615, 2.617, 2.627, 2.647, 2.680, 2.746, 2.799", \
			  "2.402, 2.404, 2.414, 2.434, 2.467, 2.533, 2.586", \
			  "2.231, 2.234, 2.244, 2.264, 2.297, 2.363, 2.416" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "2.825, 2.828, 2.838, 2.858, 2.891, 2.957, 3.010", \
			  "2.817, 2.819, 2.829, 2.849, 2.882, 2.949, 3.002", \
			  "2.785, 2.788, 2.797, 2.817, 2.850, 2.917, 2.970", \
			  "2.721, 2.724, 2.734, 2.753, 2.787, 2.853, 2.906", \
			  "2.615, 2.617, 2.627, 2.647, 2.680, 2.746, 2.799", \
			  "2.402, 2.404, 2.414, 2.434, 2.467, 2.533, 2.586", \
			  "2.231, 2.234, 2.244, 2.264, 2.297, 2.363, 2.416" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.020, 0.013, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.126, 0.119, 0.094, 0.043, 0.000, 0.000, 0.000", \
			  "0.339, 0.332, 0.307, 0.255, 0.170, 0.000, 0.000", \
			  "0.509, 0.502, 0.477, 0.426, 0.341, 0.170, 0.082" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.000, 2.800");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.020, 0.013, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.126, 0.119, 0.094, 0.043, 0.000, 0.000, 0.000", \
			  "0.339, 0.332, 0.307, 0.255, 0.170, 0.000, 0.000", \
			  "0.509, 0.502, 0.477, 0.426, 0.341, 0.170, 0.082" \
			)
		}	}
	}

	cell_leakage_power : 7.69E-3;
  }
}