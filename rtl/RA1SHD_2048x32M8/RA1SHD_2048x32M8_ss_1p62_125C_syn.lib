/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2018  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single Port SRAM Generator
 *           			CL018HV Process
 *      version:		2006Q4V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_2048x32M8" -words 2048 -bits 32 -frequency 100 -ring_width 2 -mux 8 -drive 12 -write_mask on -wp_size 8 -top_layer met5 -power_type rings -horiz met4 -vert met3 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,VSS:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm off -libname "sramsp_tsmc_cl018hv"
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   sramsp_tsmc_cl018hv
 *      Instance Name:  RA1SHD_2048x32M8
 *      Words:          2048
 *      Word Width:     32
 *      Mux:            8
 *      Pipeline:       No
 *      Process:        ss_1p62_125C
 *      Delays:		max
 *
 *      Creation Date:  2018-03-22 16:53:52Z
 *      Version:        2006Q4V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(sramsp_tsmc_cl018hv) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2018-03-22 16:53:52Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2018 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 125.000;
	nom_voltage		: 1.620;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 4.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(ss_1p62_125C) {
		process	 : 1;
		temperature	 : 125.000;
		voltage	 : 1.620;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : ss_1p62_125C;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD_2048x32M8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x32M8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x32M8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_2048x32M8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_2048x32M8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 32;
		bit_from : 31;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x32M8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 11;
		bit_from : 10;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x32M8_WRITE) {
		base_type : array ;
		data_type : bit ;
		bit_width : 4;
		bit_from : 3;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_2048x32M8) {
	area		 : 401443.591;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 11;
		word_width : 32;
	}
	bus(Q)	 {
		bus_type : RA1SHD_2048x32M8_DATA;
		direction : output;
		max_capacitance : 3.422;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "3.081, 3.115, 3.217, 3.429, 3.785, 4.854, 5.966", \
			  "3.093, 3.127, 3.228, 3.440, 3.797, 4.866, 5.977", \
			  "3.135, 3.169, 3.271, 3.483, 3.839, 4.908, 6.020", \
			  "3.220, 3.254, 3.356, 3.568, 3.925, 4.994, 6.105", \
			  "3.363, 3.397, 3.498, 3.710, 4.067, 5.136, 6.247", \
			  "3.789, 3.823, 3.925, 4.137, 4.493, 5.562, 6.674", \
			  "4.215, 4.249, 4.351, 4.563, 4.920, 5.989, 7.100" \
			)
			}
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.121, 0.183, 0.371, 0.762, 1.418, 3.387, 5.435")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "3.101, 3.122, 3.185, 3.315, 3.535, 4.193, 4.878", \
			  "3.112, 3.133, 3.196, 3.327, 3.546, 4.204, 4.889", \
			  "3.155, 3.176, 3.239, 3.369, 3.589, 4.247, 4.932", \
			  "3.240, 3.261, 3.324, 3.455, 3.674, 4.332, 5.017", \
			  "3.382, 3.403, 3.466, 3.597, 3.816, 4.475, 5.159", \
			  "3.809, 3.830, 3.892, 4.023, 4.243, 4.901, 5.585", \
			  "4.235, 4.256, 4.319, 4.449, 4.669, 5.327, 6.012" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.112, 0.145, 0.243, 0.449, 0.795, 1.833, 2.912")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "1.369, 1.369, 1.369, 1.517, 1.874, 2.943, 4.054", \
			  "1.375, 1.375, 1.375, 1.525, 1.881, 2.950, 4.061", \
			  "1.395, 1.395, 1.395, 1.552, 1.908, 2.977, 4.089", \
			  "1.437, 1.437, 1.437, 1.607, 1.963, 3.032, 4.143", \
			  "1.506, 1.506, 1.506, 1.698, 2.054, 3.123, 4.235", \
			  "1.713, 1.713, 1.759, 1.971, 2.328, 3.397, 4.508", \
			  "1.921, 1.931, 2.033, 2.245, 2.601, 3.670, 4.782" \
			)
                       }
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.121, 0.183, 0.371, 0.762, 1.418, 3.387, 5.435")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "1.369, 1.369, 1.369, 1.369, 1.502, 2.160, 2.845", \
			  "1.375, 1.375, 1.375, 1.375, 1.509, 2.167, 2.852", \
			  "1.395, 1.395, 1.395, 1.395, 1.536, 2.195, 2.879", \
			  "1.437, 1.437, 1.437, 1.437, 1.591, 2.250, 2.934", \
			  "1.506, 1.506, 1.506, 1.506, 1.682, 2.341, 3.025", \
			  "1.713, 1.713, 1.713, 1.736, 1.956, 2.614, 3.299", \
			  "1.921, 1.921, 1.921, 2.010, 2.229, 2.888, 3.572" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.112, 0.145, 0.243, 0.449, 0.795, 1.833, 2.912")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "1.369, 1.369, 1.369, 1.517, 1.874, 2.943, 4.054", \
			  "1.375, 1.375, 1.375, 1.525, 1.881, 2.950, 4.061", \
			  "1.395, 1.395, 1.395, 1.552, 1.908, 2.977, 4.089", \
			  "1.437, 1.437, 1.437, 1.607, 1.963, 3.032, 4.143", \
			  "1.506, 1.506, 1.506, 1.698, 2.054, 3.123, 4.235", \
			  "1.713, 1.713, 1.759, 1.971, 2.328, 3.397, 4.508", \
			  "1.921, 1.931, 2.033, 2.245, 2.601, 3.670, 4.782" \
			)
                       }
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.121, 0.183, 0.371, 0.762, 1.418, 3.387, 5.435")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "1.369, 1.369, 1.369, 1.369, 1.502, 2.160, 2.845", \
			  "1.375, 1.375, 1.375, 1.375, 1.509, 2.167, 2.852", \
			  "1.395, 1.395, 1.395, 1.395, 1.536, 2.195, 2.879", \
			  "1.437, 1.437, 1.437, 1.437, 1.591, 2.250, 2.934", \
			  "1.506, 1.506, 1.506, 1.506, 1.682, 2.341, 3.025", \
			  "1.713, 1.713, 1.713, 1.736, 1.956, 2.614, 3.299", \
			  "1.921, 1.921, 1.921, 2.010, 2.229, 2.888, 3.572" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.112, 0.145, 0.243, 0.449, 0.795, 1.833, 2.912")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.283
		clock	: true;
		min_pulse_width_low	: 0.479;
		min_pulse_width_high	: 0.267;
		min_period		: 3.287;
		max_transition		: 4.000;
		internal_power(){
			when : "(!CEN \
                                 & WEN[3] \
                                 & WEN[2] \
                                 & WEN[1] \
                                 & WEN[0] \
                        	)";
			rise_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("134.156, 134.156")
        		}
			fall_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
            		when : "(!CEN & !( \
                            	WEN[3] & \
                            	WEN[2] & \
                            	WEN[1] & \
                            	WEN[0]))";
        		rise_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("186.026, 186.026")
        		}
        		fall_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.132, 0.132")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.014;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.985, 0.988, 0.998, 1.018, 1.051, 1.151, 1.253", \
			  "0.974, 0.977, 0.987, 1.007, 1.040, 1.140, 1.242", \
			  "0.931, 0.934, 0.944, 0.964, 0.997, 1.097, 1.199", \
			  "0.846, 0.849, 0.859, 0.879, 0.912, 1.012, 1.114", \
			  "0.704, 0.707, 0.717, 0.737, 0.770, 0.870, 0.972", \
			  "0.278, 0.280, 0.290, 0.310, 0.344, 0.444, 0.546", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.017, 0.119" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.985, 0.988, 0.998, 1.018, 1.051, 1.151, 1.253", \
			  "0.974, 0.977, 0.987, 1.007, 1.040, 1.140, 1.242", \
			  "0.931, 0.934, 0.944, 0.964, 0.997, 1.097, 1.199", \
			  "0.846, 0.849, 0.859, 0.879, 0.912, 1.012, 1.114", \
			  "0.704, 0.707, 0.717, 0.737, 0.770, 0.870, 0.972", \
			  "0.278, 0.280, 0.290, 0.310, 0.344, 0.444, 0.546", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.017, 0.119" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.020, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.165, 0.162, 0.152, 0.132, 0.099, 0.000, 0.000", \
			  "0.591, 0.589, 0.579, 0.558, 0.525, 0.425, 0.325", \
			  "1.018, 1.015, 1.005, 0.985, 0.952, 0.852, 0.751" \
			)
				
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.020, 0.010, 0.000, 0.000, 0.000, 0.000", \
			  "0.165, 0.162, 0.152, 0.132, 0.099, 0.000, 0.000", \
			  "0.591, 0.589, 0.579, 0.558, 0.525, 0.425, 0.325", \
			  "1.018, 1.015, 1.005, 0.985, 0.952, 0.852, 0.751" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	bus(WEN)	 {
		bus_type : RA1SHD_2048x32M8_WRITE;
		direction : input;
		capacitance : 0.137;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "5.893, 5.898, 5.917, 5.955, 6.018, 6.208, 6.398", \
			  "5.882, 5.887, 5.906, 5.944, 6.007, 6.197, 6.386", \
			  "5.839, 5.844, 5.863, 5.901, 5.964, 6.154, 6.344", \
			  "5.754, 5.759, 5.778, 5.816, 5.879, 6.069, 6.258", \
			  "5.612, 5.617, 5.636, 5.674, 5.737, 5.927, 6.116", \
			  "5.185, 5.190, 5.209, 5.247, 5.310, 5.500, 5.690", \
			  "4.759, 4.764, 4.783, 4.821, 4.884, 5.074, 5.263" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "5.893, 5.898, 5.917, 5.955, 6.018, 6.208, 6.398", \
			  "5.882, 5.887, 5.906, 5.944, 6.007, 6.197, 6.386", \
			  "5.839, 5.844, 5.863, 5.901, 5.964, 6.154, 6.344", \
			  "5.754, 5.759, 5.778, 5.816, 5.879, 6.069, 6.258", \
			  "5.612, 5.617, 5.636, 5.674, 5.737, 5.927, 6.116", \
			  "5.185, 5.190, 5.209, 5.247, 5.310, 5.500, 5.690", \
			  "4.759, 4.764, 4.783, 4.821, 4.884, 5.074, 5.263" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.367, 0.362, 0.343, 0.305, 0.242, 0.052, 0.000" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.367, 0.362, 0.343, 0.305, 0.242, 0.052, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD_2048x32M8_ADDRESS;
		direction : input;
		capacitance : 0.047;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "1.217, 1.221, 1.237, 1.269, 1.322, 1.481, 1.641", \
			  "1.205, 1.210, 1.225, 1.257, 1.310, 1.470, 1.629", \
			  "1.163, 1.167, 1.183, 1.215, 1.268, 1.427, 1.587", \
			  "1.077, 1.082, 1.098, 1.129, 1.183, 1.342, 1.501", \
			  "0.935, 0.939, 0.955, 0.987, 1.040, 1.200, 1.359", \
			  "0.509, 0.513, 0.529, 0.561, 0.614, 0.773, 0.933", \
			  "0.082, 0.087, 0.103, 0.134, 0.188, 0.347, 0.506" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "1.217, 1.221, 1.237, 1.269, 1.322, 1.481, 1.641", \
			  "1.205, 1.210, 1.225, 1.257, 1.310, 1.470, 1.629", \
			  "1.163, 1.167, 1.183, 1.215, 1.268, 1.427, 1.587", \
			  "1.077, 1.082, 1.098, 1.129, 1.183, 1.342, 1.501", \
			  "0.935, 0.939, 0.955, 0.987, 1.040, 1.200, 1.359", \
			  "0.509, 0.513, 0.529, 0.561, 0.614, 0.773, 0.933", \
			  "0.082, 0.087, 0.103, 0.134, 0.188, 0.347, 0.506" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.124, 0.120, 0.104, 0.072, 0.019, 0.000, 0.000", \
			  "0.550, 0.546, 0.530, 0.498, 0.445, 0.286, 0.126", \
			  "0.977, 0.973, 0.957, 0.925, 0.872, 0.712, 0.553" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.038, 0.034, 0.017, 0.000, 0.000, 0.000, 0.000", \
			  "0.123, 0.119, 0.103, 0.070, 0.016, 0.000, 0.000", \
			  "0.265, 0.261, 0.245, 0.212, 0.158, 0.000, 0.000", \
			  "0.692, 0.688, 0.671, 0.639, 0.584, 0.421, 0.258", \
			  "1.118, 1.114, 1.098, 1.065, 1.010, 0.847, 0.684" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("1.549, 1.549")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD_2048x32M8_DATA;
		direction : input;
		capacitance : 0.003;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.810, 0.816, 0.836, 0.877, 0.945, 1.148, 1.351", \
			  "0.799, 0.804, 0.825, 0.865, 0.933, 1.136, 1.340", \
			  "0.756, 0.762, 0.782, 0.823, 0.891, 1.094, 1.297", \
			  "0.671, 0.677, 0.697, 0.738, 0.805, 1.009, 1.212", \
			  "0.529, 0.534, 0.555, 0.595, 0.663, 0.866, 1.070", \
			  "0.103, 0.108, 0.128, 0.169, 0.237, 0.440, 0.643", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.014, 0.217" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.810, 0.816, 0.836, 0.877, 0.945, 1.148, 1.351", \
			  "0.799, 0.804, 0.825, 0.865, 0.933, 1.136, 1.340", \
			  "0.756, 0.762, 0.782, 0.823, 0.891, 1.094, 1.297", \
			  "0.671, 0.677, 0.697, 0.738, 0.805, 1.009, 1.212", \
			  "0.529, 0.534, 0.555, 0.595, 0.663, 0.866, 1.070", \
			  "0.103, 0.108, 0.128, 0.169, 0.237, 0.440, 0.643", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.014, 0.217" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.094, 0.086, 0.055, 0.000, 0.000, 0.000, 0.000", \
			  "0.521, 0.512, 0.481, 0.419, 0.316, 0.006, 0.000", \
			  "0.947, 0.939, 0.908, 0.846, 0.742, 0.432, 0.122" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 2.500, 4.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.094, 0.086, 0.055, 0.000, 0.000, 0.000, 0.000", \
			  "0.521, 0.512, 0.481, 0.419, 0.316, 0.006, 0.000", \
			  "0.947, 0.939, 0.908, 0.846, 0.742, 0.432, 0.122" \
			)
		}	}
	}

	cell_leakage_power : 9.09E-3;
  }
}