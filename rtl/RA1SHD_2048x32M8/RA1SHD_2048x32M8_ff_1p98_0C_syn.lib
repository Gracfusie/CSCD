/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2018  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single Port SRAM Generator
 *           			CL018HV Process
 *      version:		2006Q4V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_2048x32M8" -words 2048 -bits 32 -frequency 100 -ring_width 2 -mux 8 -drive 12 -write_mask on -wp_size 8 -top_layer met5 -power_type rings -horiz met4 -vert met3 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,VSS:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm off -libname "sramsp_tsmc_cl018hv"
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   sramsp_tsmc_cl018hv
 *      Instance Name:  RA1SHD_2048x32M8
 *      Words:          2048
 *      Word Width:     32
 *      Mux:            8
 *      Pipeline:       No
 *      Process:        ff_1p98_0C
 *      Delays:		min
 *
 *      Creation Date:  2018-03-22 16:53:51Z
 *      Version:        2006Q4V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(sramsp_tsmc_cl018hv) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2018-03-22 16:53:51Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2018 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: 0.000;
	nom_voltage		: 1.980;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 2.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(ff_1p98_0C) {
		process	 : 1;
		temperature	 : 0.000;
		voltage	 : 1.980;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : ff_1p98_0C;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD_2048x32M8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x32M8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x32M8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_2048x32M8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_2048x32M8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 32;
		bit_from : 31;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x32M8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 11;
		bit_from : 10;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x32M8_WRITE) {
		base_type : array ;
		data_type : bit ;
		bit_width : 4;
		bit_from : 3;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_2048x32M8) {
	area		 : 401443.591;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 11;
		word_width : 32;
	}
	bus(Q)	 {
		bus_type : RA1SHD_2048x32M8_DATA;
		direction : output;
		max_capacitance : 3.422;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.950, 0.963, 0.994, 1.047, 1.136, 1.404, 1.683", \
			  "0.955, 0.968, 0.999, 1.052, 1.141, 1.409, 1.688", \
			  "0.975, 0.988, 1.019, 1.072, 1.161, 1.429, 1.708", \
			  "1.015, 1.028, 1.059, 1.112, 1.201, 1.469, 1.748", \
			  "1.082, 1.095, 1.125, 1.178, 1.268, 1.536, 1.815", \
			  "1.148, 1.161, 1.192, 1.245, 1.334, 1.602, 1.881", \
			  "1.215, 1.228, 1.258, 1.311, 1.401, 1.669, 1.948" \
			)
			}
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.044, 0.071, 0.152, 0.321, 0.605, 1.457, 2.342")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.950, 0.963, 0.994, 1.047, 1.136, 1.404, 1.683", \
			  "0.955, 0.968, 0.999, 1.052, 1.141, 1.409, 1.688", \
			  "0.975, 0.988, 1.019, 1.072, 1.161, 1.429, 1.708", \
			  "1.015, 1.028, 1.059, 1.112, 1.201, 1.469, 1.748", \
			  "1.082, 1.095, 1.125, 1.178, 1.268, 1.536, 1.815", \
			  "1.148, 1.161, 1.192, 1.245, 1.334, 1.602, 1.881", \
			  "1.215, 1.228, 1.258, 1.311, 1.401, 1.669, 1.948" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.040, 0.053, 0.091, 0.171, 0.306, 0.711, 1.132")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.393, 0.406, 0.445, 0.479, 0.479, 0.479, 0.479", \
			  "0.399, 0.411, 0.450, 0.480, 0.480, 0.480, 0.480", \
			  "0.419, 0.432, 0.471, 0.484, 0.484, 0.484, 0.484", \
			  "0.461, 0.474, 0.493, 0.493, 0.493, 0.493, 0.493", \
			  "0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507", \
			  "0.521, 0.521, 0.521, 0.521, 0.521, 0.521, 0.521", \
			  "0.535, 0.535, 0.535, 0.535, 0.535, 0.535, 0.535" \
			)
                       }
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.044, 0.071, 0.152, 0.321, 0.605, 1.457, 2.342")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.345, 0.354, 0.379, 0.432, 0.479, 0.479, 0.479", \
			  "0.351, 0.359, 0.385, 0.438, 0.480, 0.480, 0.480", \
			  "0.372, 0.380, 0.406, 0.459, 0.484, 0.484, 0.484", \
			  "0.413, 0.422, 0.447, 0.493, 0.493, 0.493, 0.493", \
			  "0.483, 0.491, 0.507, 0.507, 0.507, 0.507, 0.507", \
			  "0.521, 0.521, 0.521, 0.521, 0.521, 0.521, 0.521", \
			  "0.535, 0.535, 0.535, 0.535, 0.535, 0.535, 0.535" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.040, 0.053, 0.091, 0.171, 0.306, 0.711, 1.132")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.393, 0.406, 0.445, 0.479, 0.479, 0.479, 0.479", \
			  "0.399, 0.411, 0.450, 0.480, 0.480, 0.480, 0.480", \
			  "0.419, 0.432, 0.471, 0.484, 0.484, 0.484, 0.484", \
			  "0.461, 0.474, 0.493, 0.493, 0.493, 0.493, 0.493", \
			  "0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507", \
			  "0.521, 0.521, 0.521, 0.521, 0.521, 0.521, 0.521", \
			  "0.535, 0.535, 0.535, 0.535, 0.535, 0.535, 0.535" \
			)
                       }
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.044, 0.071, 0.152, 0.321, 0.605, 1.457, 2.342")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.345, 0.354, 0.379, 0.432, 0.479, 0.479, 0.479", \
			  "0.351, 0.359, 0.385, 0.438, 0.480, 0.480, 0.480", \
			  "0.372, 0.380, 0.406, 0.459, 0.484, 0.484, 0.484", \
			  "0.413, 0.422, 0.447, 0.493, 0.493, 0.493, 0.493", \
			  "0.483, 0.491, 0.507, 0.507, 0.507, 0.507, 0.507", \
			  "0.521, 0.521, 0.521, 0.521, 0.521, 0.521, 0.521", \
			  "0.535, 0.535, 0.535, 0.535, 0.535, 0.535, 0.535" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.040, 0.053, 0.091, 0.171, 0.306, 0.711, 1.132")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.291
		clock	: true;
		min_pulse_width_low	: 0.138;
		min_pulse_width_high	: 0.080;
		min_period		: 0.990;
		max_transition		: 2.000;
		internal_power(){
			when : "(!CEN \
                                 & WEN[3] \
                                 & WEN[2] \
                                 & WEN[1] \
                                 & WEN[0] \
                        	)";
			rise_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("206.055, 206.055")
        		}
			fall_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
            		when : "(!CEN & !( \
                            	WEN[3] & \
                            	WEN[2] & \
                            	WEN[1] & \
                            	WEN[0]))";
        		rise_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("281.063, 281.063")
        		}
        		fall_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.102, 0.102")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.014;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.333, 0.333, 0.331, 0.328, 0.327, 0.381, 0.435", \
			  "0.328, 0.327, 0.326, 0.323, 0.322, 0.376, 0.430", \
			  "0.308, 0.308, 0.306, 0.303, 0.302, 0.356, 0.410", \
			  "0.268, 0.268, 0.266, 0.263, 0.262, 0.316, 0.370", \
			  "0.202, 0.201, 0.200, 0.197, 0.196, 0.250, 0.303", \
			  "0.135, 0.135, 0.133, 0.130, 0.129, 0.183, 0.237", \
			  "0.069, 0.068, 0.067, 0.064, 0.063, 0.117, 0.170" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.333, 0.333, 0.331, 0.328, 0.327, 0.381, 0.435", \
			  "0.328, 0.327, 0.326, 0.323, 0.322, 0.376, 0.430", \
			  "0.308, 0.308, 0.306, 0.303, 0.302, 0.356, 0.410", \
			  "0.268, 0.268, 0.266, 0.263, 0.262, 0.316, 0.370", \
			  "0.202, 0.201, 0.200, 0.197, 0.196, 0.250, 0.303", \
			  "0.135, 0.135, 0.133, 0.130, 0.129, 0.183, 0.237", \
			  "0.069, 0.068, 0.067, 0.064, 0.063, 0.117, 0.170" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.002, 0.007, 0.012", \
			  "0.032, 0.032, 0.034, 0.037, 0.042, 0.047, 0.052", \
			  "0.098, 0.099, 0.100, 0.103, 0.109, 0.114, 0.119", \
			  "0.165, 0.165, 0.167, 0.170, 0.175, 0.180, 0.185", \
			  "0.231, 0.232, 0.233, 0.236, 0.242, 0.247, 0.252" \
			)
				
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.002, 0.007, 0.012", \
			  "0.032, 0.032, 0.034, 0.037, 0.042, 0.047, 0.052", \
			  "0.098, 0.099, 0.100, 0.103, 0.109, 0.114, 0.119", \
			  "0.165, 0.165, 0.167, 0.170, 0.175, 0.180, 0.185", \
			  "0.231, 0.232, 0.233, 0.236, 0.242, 0.247, 0.252" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	bus(WEN)	 {
		bus_type : RA1SHD_2048x32M8_WRITE;
		direction : input;
		capacitance : 0.138;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.251, 0.252, 0.261, 0.296, 0.355, 0.413, 0.472", \
			  "0.246, 0.247, 0.256, 0.291, 0.350, 0.408, 0.467", \
			  "0.226, 0.227, 0.236, 0.271, 0.330, 0.388, 0.447", \
			  "0.186, 0.187, 0.196, 0.231, 0.290, 0.348, 0.407", \
			  "0.119, 0.121, 0.130, 0.165, 0.223, 0.282, 0.340", \
			  "0.053, 0.054, 0.063, 0.098, 0.157, 0.215, 0.274", \
			  "0.039, 0.040, 0.045, 0.054, 0.112, 0.170, 0.229" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.251, 0.252, 0.261, 0.296, 0.355, 0.413, 0.472", \
			  "0.246, 0.247, 0.256, 0.291, 0.350, 0.408, 0.467", \
			  "0.226, 0.227, 0.236, 0.271, 0.330, 0.388, 0.447", \
			  "0.186, 0.187, 0.196, 0.231, 0.290, 0.348, 0.407", \
			  "0.119, 0.121, 0.130, 0.165, 0.223, 0.282, 0.340", \
			  "0.053, 0.054, 0.063, 0.098, 0.157, 0.215, 0.274", \
			  "0.039, 0.040, 0.045, 0.054, 0.112, 0.170, 0.229" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.003, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.069, 0.064, 0.047, 0.022, 0.008, 0.000, 0.000" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.003, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.069, 0.064, 0.047, 0.022, 0.008, 0.000, 0.000" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD_2048x32M8_ADDRESS;
		direction : input;
		capacitance : 0.047;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.299, 0.300, 0.303, 0.310, 0.321, 0.333, 0.344", \
			  "0.293, 0.294, 0.298, 0.305, 0.316, 0.328, 0.339", \
			  "0.273, 0.274, 0.278, 0.285, 0.296, 0.308, 0.319", \
			  "0.234, 0.234, 0.238, 0.245, 0.256, 0.268, 0.279", \
			  "0.167, 0.168, 0.171, 0.178, 0.190, 0.201, 0.213", \
			  "0.101, 0.101, 0.105, 0.112, 0.123, 0.135, 0.146", \
			  "0.034, 0.035, 0.038, 0.045, 0.057, 0.068, 0.080" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.299, 0.300, 0.303, 0.310, 0.321, 0.333, 0.344", \
			  "0.293, 0.294, 0.298, 0.305, 0.316, 0.328, 0.339", \
			  "0.273, 0.274, 0.278, 0.285, 0.296, 0.308, 0.319", \
			  "0.234, 0.234, 0.238, 0.245, 0.256, 0.268, 0.279", \
			  "0.167, 0.168, 0.171, 0.178, 0.190, 0.201, 0.213", \
			  "0.101, 0.101, 0.105, 0.112, 0.123, 0.135, 0.146", \
			  "0.034, 0.035, 0.038, 0.045, 0.057, 0.068, 0.080" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.014, 0.013, 0.009, 0.003, 0.000, 0.000, 0.000", \
			  "0.019, 0.018, 0.015, 0.008, 0.000, 0.000, 0.000", \
			  "0.039, 0.038, 0.035, 0.028, 0.016, 0.005, 0.000", \
			  "0.079, 0.078, 0.075, 0.068, 0.056, 0.045, 0.033", \
			  "0.146, 0.145, 0.141, 0.134, 0.123, 0.111, 0.100", \
			  "0.212, 0.211, 0.208, 0.201, 0.189, 0.178, 0.166", \
			  "0.279, 0.278, 0.274, 0.267, 0.256, 0.244, 0.233" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.010, 0.007, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.015, 0.012, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.035, 0.032, 0.020, 0.000, 0.000, 0.000, 0.000", \
			  "0.075, 0.072, 0.059, 0.035, 0.000, 0.000, 0.000", \
			  "0.142, 0.138, 0.126, 0.101, 0.060, 0.019, 0.000", \
			  "0.208, 0.205, 0.192, 0.168, 0.127, 0.086, 0.044", \
			  "0.275, 0.271, 0.259, 0.234, 0.193, 0.152, 0.111" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("2.466, 2.466")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD_2048x32M8_DATA;
		direction : input;
		capacitance : 0.003;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.230, 0.231, 0.234, 0.241, 0.288, 0.368, 0.447", \
			  "0.225, 0.226, 0.229, 0.236, 0.283, 0.362, 0.441", \
			  "0.205, 0.206, 0.209, 0.216, 0.263, 0.342, 0.421", \
			  "0.165, 0.166, 0.169, 0.176, 0.223, 0.302, 0.382", \
			  "0.099, 0.099, 0.103, 0.109, 0.157, 0.236, 0.315", \
			  "0.032, 0.033, 0.036, 0.043, 0.090, 0.169, 0.249", \
			  "0.000, 0.000, 0.000, 0.000, 0.024, 0.103, 0.182" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.230, 0.231, 0.234, 0.241, 0.288, 0.368, 0.447", \
			  "0.225, 0.226, 0.229, 0.236, 0.283, 0.362, 0.441", \
			  "0.205, 0.206, 0.209, 0.216, 0.263, 0.342, 0.421", \
			  "0.165, 0.166, 0.169, 0.176, 0.223, 0.302, 0.382", \
			  "0.099, 0.099, 0.103, 0.109, 0.157, 0.236, 0.315", \
			  "0.032, 0.033, 0.036, 0.043, 0.090, 0.169, 0.249", \
			  "0.000, 0.000, 0.000, 0.000, 0.024, 0.103, 0.182" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.012, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.085, 0.079, 0.055, 0.007, 0.000, 0.000, 0.000", \
			  "0.152, 0.145, 0.121, 0.074, 0.012, 0.001, 0.000", \
			  "0.218, 0.212, 0.188, 0.140, 0.079, 0.067, 0.056" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.019, 0.012, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.085, 0.079, 0.055, 0.007, 0.000, 0.000, 0.000", \
			  "0.152, 0.145, 0.121, 0.074, 0.012, 0.001, 0.000", \
			  "0.218, 0.212, 0.188, 0.140, 0.079, 0.067, 0.056" \
			)
		}	}
	}

	cell_leakage_power : 7.92E-3;
  }
}