/*
 *      CONFIDENTIAL  AND  PROPRIETARY SOFTWARE OF ARM Physical IP, INC.
 *      
 *      Copyright (c) 1993-2018  ARM Physical IP, Inc.  All  Rights Reserved.
 *      
 *      Use of this Software is subject to the terms and conditions  of the
 *      applicable license agreement with ARM Physical IP, Inc.  In addition,
 *      this Software is protected by patents, copyright law and international
 *      treaties.
 *      
 *      The copyright notice(s) in this Software does not indicate actual or
 *      intended publication of this Software.
 *      
 *      name:			High Speed/Density Single Port SRAM Generator
 *           			CL018HV Process
 *      version:		2006Q4V1
 *      comment:		
 *      configuration:	 -instname "RA1SHD_2048x32M8" -words 2048 -bits 32 -frequency 100 -ring_width 2 -mux 8 -drive 12 -write_mask on -wp_size 8 -top_layer met5 -power_type rings -horiz met4 -vert met3 -cust_comment "" -left_bus_delim "[" -right_bus_delim "]" -pwr_gnd_rename "VDD:VDD,VSS:VSS" -prefix "" -pin_space 0.0 -name_case upper -check_instname on -diodes on -inside_ring_type GND -asvm off -libname "sramsp_tsmc_cl018hv"
 *
 *      Synopsys model for Synchronous Single-Port Ram
 *
 *      Library Name:   sramsp_tsmc_cl018hv
 *      Instance Name:  RA1SHD_2048x32M8
 *      Words:          2048
 *      Word Width:     32
 *      Mux:            8
 *      Pipeline:       No
 *      Process:        ff_1p98_-40C
 *      Delays:		min
 *
 *      Creation Date:  2018-03-22 16:53:51Z
 *      Version:        2006Q4V1
 *
 *      Verified With: Synopsys Design Compiler
 *
 *      Modeling Assumptions: This library contains a black box description
 *          for a memory element.  At the library level, a
 *          default_max_transition constraint is set to the maximum
 *          characterized input slew.  Each output has a max_capacitance
 *          constraint set to the highest characterized output load.  These two
 *          constraints force Design Compiler to synthesize circuits that
 *          operate within the characterization space.  The user can tighten
 *          these constraints, if desired.  When writing SDF from Design
 *          Compiler, use the version 2.1 option.  This ensures the SDF will
 *          annotate to simulation models provided with this generator.
 *
 *      Modeling Limitations: 
 *          Due to limitations of the .lib format, some data reduction was
 *          necessary.  When reducing data, minimum values were chosen for the
 *          fast case corner and maximum values were used for the typical and
 *          best case corners.  It is recommended that critical timing and
 *          setup and hold times be checked at all corners.
 *
 *      Known Bugs: None.
 *
 *      Known Work Arounds: N/A
 *
 */

library(sramsp_tsmc_cl018hv) {
	delay_model		: table_lookup;
	revision		: 1.1;	
	date			: "2018-03-22 16:53:51Z";
	comment			: "Confidential Information of ARM Physical IP, Inc.  Use subject to ARM Physical IP, Inc. license.  Copyright (c) 1993-2018 ARM Physical IP, Inc.";
	time_unit		: "1ns";
	voltage_unit		: "1V";
	current_unit		: "1mA";
	leakage_power_unit	: "1mW";
	nom_process		: 1;
	nom_temperature		: -40.000;
	nom_voltage		: 1.980;
	capacitive_load_unit	 (1,pf);

	pulling_resistance_unit	        : "1kohm";

	/* additional header data */
	default_cell_leakage_power      : 0;
	default_fanout_load		: 1;
	default_inout_pin_cap		: 0.005;
	default_input_pin_cap		: 0.005;
	default_output_pin_cap		: 0.0;
	default_max_transition		: 2.000;

        /* default attributes */
        default_leakage_power_density : 0.0;
        slew_derate_from_library      : 1;
        slew_lower_threshold_pct_fall : 10.000;
        slew_upper_threshold_pct_fall : 90.000;
        slew_lower_threshold_pct_rise : 10.000;
        slew_upper_threshold_pct_rise : 90.000;
        input_threshold_pct_fall      : 50.000;
        input_threshold_pct_rise      : 50.000;
        output_threshold_pct_fall     : 50.000;
        output_threshold_pct_rise     : 50.000;

 	/* k-factors */
 	k_process_cell_fall             : 1;
 	k_process_cell_leakage_power    : 0;
 	k_process_cell_rise             : 1;
 	k_process_fall_transition       : 1;
 	k_process_hold_fall             : 1;
 	k_process_hold_rise             : 1;
 	k_process_internal_power        : 0;
 	k_process_min_pulse_width_high  : 1;
 	k_process_min_pulse_width_low   : 1;
 	k_process_pin_cap               : 0;
 	k_process_recovery_fall         : 1;
 	k_process_recovery_rise         : 1;
 	k_process_rise_transition       : 1;
 	k_process_setup_fall            : 1;
 	k_process_setup_rise            : 1;
 	k_process_wire_cap              : 0;
 	k_process_wire_res              : 0;
	k_temp_cell_fall		: 0.0;
	k_temp_cell_rise		: 0.0;
	k_temp_hold_fall                : 0.0;
	k_temp_hold_rise                : 0.0;
	k_temp_min_pulse_width_high     : 0.0;
	k_temp_min_pulse_width_low      : 0.0;
	k_temp_min_period               : 0.0;
	k_temp_rise_propagation         : 0.0;
	k_temp_fall_propagation         : 0.0;
	k_temp_rise_transition          : 0.0;
	k_temp_fall_transition          : 0.0;
	k_temp_recovery_fall            : 0.0;
	k_temp_recovery_rise            : 0.0;
	k_temp_setup_fall               : 0.0;
	k_temp_setup_rise               : 0.0;
	k_volt_cell_fall                : 0.0;
	k_volt_cell_rise                : 0.0;
	k_volt_hold_fall                : 0.0;
	k_volt_hold_rise                : 0.0;
	k_volt_min_pulse_width_high     : 0.0;
	k_volt_min_pulse_width_low      : 0.0;
	k_volt_min_period               : 0.0;
	k_volt_rise_propagation         : 0.0;
	k_volt_fall_propagation         : 0.0;
	k_volt_rise_transition	        : 0.0;
	k_volt_fall_transition	        : 0.0;
	k_volt_recovery_fall            : 0.0;
	k_volt_recovery_rise            : 0.0;
	k_volt_setup_fall               : 0.0;
	k_volt_setup_rise               : 0.0;


	operating_conditions(ff_1p98_-40C) {
		process	 : 1;
		temperature	 : -40.000;
		voltage	 : 1.980;
		tree_type	 : balanced_tree;
	}
        default_operating_conditions : ff_1p98_-40C;
	wire_load("sample") {
		resistance	 : 1.6e-05;
		capacitance	 : 0.0002;
		area	 : 1.7;
  		slope	 : 500;
		fanout_length	 (1,500);
	}
	output_voltage(GENERAL) {
		vol	 : 0.4;
		voh	 : VDD - 0.4;
		vomin	 : -0.5;
		vomax	 : VDD + 0.5;
	}
	input_voltage(CMOS) {
		vil	 : 0.3 * VDD;
		vih	 : 0.7 * VDD;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
	input_voltage(TTL) {
		vil	 : 0.8;
		vih	 : 2;
		vimin	 : -0.5;
		vimax	 : VDD + 0.5;
	}
        lu_table_template(RA1SHD_2048x32M8_delay_template) {
           variable_1 : input_net_transition;
           variable_2 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x32M8_constraint_template) {
           variable_1 : related_pin_transition;
           variable_2 : constrained_pin_transition;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
               index_2 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
	lu_table_template(RA1SHD_2048x32M8_load_template) {
           variable_1 : total_output_net_capacitance;
               index_1 ("1000, 1001, 1002, 1003, 1004, 1005, 1006");
        }
        power_lut_template(RA1SHD_2048x32M8_passive_energy_template_1x2) {
           variable_1 : input_transition_time;
               index_1 ("1000, 1001");
        }
	library_features(report_delay_calculation);
	type (RA1SHD_2048x32M8_DATA) {
		base_type : array ;
		data_type : bit ;
		bit_width : 32;
		bit_from : 31;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x32M8_ADDRESS) {
		base_type : array ;
		data_type : bit ;
		bit_width : 11;
		bit_from : 10;
		bit_to : 0 ;
		downto : true ;
	}
	type (RA1SHD_2048x32M8_WRITE) {
		base_type : array ;
		data_type : bit ;
		bit_width : 4;
		bit_from : 3;
		bit_to : 0 ;
		downto : true ;
	}
cell(RA1SHD_2048x32M8) {
	area		 : 401443.591;
	dont_use	 : TRUE;
	dont_touch	 : TRUE;
        interface_timing : TRUE;
	memory() {
		type : ram;
		address_width : 11;
		word_width : 32;
	}
	bus(Q)	 {
		bus_type : RA1SHD_2048x32M8_DATA;
		direction : output;
		max_capacitance : 3.422;
		capacitance : 0.022;
                three_state : "OEN" ;
                memory_read() {
			address : A;
		}
		timing() {
			related_pin :	"CLK" ;
			timing_type : rising_edge;
			timing_sense : non_unate;
			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.903, 0.916, 0.946, 0.996, 1.081, 1.333, 1.596", \
			  "0.909, 0.921, 0.952, 1.002, 1.086, 1.339, 1.602", \
			  "0.929, 0.941, 0.972, 1.022, 1.106, 1.359, 1.622", \
			  "0.969, 0.982, 1.012, 1.062, 1.147, 1.400, 1.663", \
			  "1.037, 1.049, 1.080, 1.130, 1.214, 1.467, 1.730", \
			  "1.104, 1.117, 1.147, 1.198, 1.282, 1.535, 1.798", \
			  "1.172, 1.185, 1.215, 1.265, 1.349, 1.602, 1.865" \
			)
			}
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.033, 0.058, 0.133, 0.289, 0.551, 1.338, 2.155")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.903, 0.916, 0.946, 0.996, 1.081, 1.333, 1.596", \
			  "0.909, 0.921, 0.952, 1.002, 1.086, 1.339, 1.602", \
			  "0.929, 0.941, 0.972, 1.022, 1.106, 1.359, 1.622", \
			  "0.969, 0.982, 1.012, 1.062, 1.147, 1.400, 1.663", \
			  "1.037, 1.049, 1.080, 1.130, 1.214, 1.467, 1.730", \
			  "1.104, 1.117, 1.147, 1.198, 1.282, 1.535, 1.798", \
			  "1.172, 1.185, 1.215, 1.265, 1.349, 1.602, 1.865" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.039, 0.051, 0.089, 0.166, 0.296, 0.687, 1.093")
		}	}
		timing() {
			related_pin :	"OEN" ;
                        timing_type : three_state_disable ;
			timing_sense : non_unate;

			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.375, 0.388, 0.426, 0.457, 0.457, 0.457, 0.457", \
			  "0.381, 0.394, 0.431, 0.458, 0.458, 0.458, 0.458", \
			  "0.402, 0.415, 0.452, 0.461, 0.461, 0.461, 0.461", \
			  "0.445, 0.457, 0.468, 0.468, 0.468, 0.468, 0.468", \
			  "0.480, 0.480, 0.480, 0.480, 0.480, 0.480, 0.480", \
			  "0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491", \
			  "0.503, 0.503, 0.503, 0.503, 0.503, 0.503, 0.503" \
			)
                       }
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.033, 0.058, 0.133, 0.289, 0.551, 1.338, 2.155")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.334, 0.342, 0.366, 0.416, 0.457, 0.457, 0.457", \
			  "0.339, 0.348, 0.372, 0.422, 0.458, 0.458, 0.458", \
			  "0.361, 0.369, 0.393, 0.443, 0.461, 0.461, 0.461", \
			  "0.403, 0.411, 0.435, 0.468, 0.468, 0.468, 0.468", \
			  "0.474, 0.480, 0.480, 0.480, 0.480, 0.480, 0.480", \
			  "0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491", \
			  "0.503, 0.503, 0.503, 0.503, 0.503, 0.503, 0.503" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.039, 0.051, 0.089, 0.166, 0.296, 0.687, 1.093")
		}	}
		timing() {
			related_pin :	"OEN" ;
			timing_sense : non_unate;
                        timing_type : three_state_enable ;

			cell_rise(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.375, 0.388, 0.426, 0.457, 0.457, 0.457, 0.457", \
			  "0.381, 0.394, 0.431, 0.458, 0.458, 0.458, 0.458", \
			  "0.402, 0.415, 0.452, 0.461, 0.461, 0.461, 0.461", \
			  "0.445, 0.457, 0.468, 0.468, 0.468, 0.468, 0.468", \
			  "0.480, 0.480, 0.480, 0.480, 0.480, 0.480, 0.480", \
			  "0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491", \
			  "0.503, 0.503, 0.503, 0.503, 0.503, 0.503, 0.503" \
			)
                       }
			rise_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.033, 0.058, 0.133, 0.289, 0.551, 1.338, 2.155")
			}
			cell_fall(RA1SHD_2048x32M8_delay_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ( \
			  "0.334, 0.342, 0.366, 0.416, 0.457, 0.457, 0.457", \
			  "0.339, 0.348, 0.372, 0.422, 0.458, 0.458, 0.458", \
			  "0.361, 0.369, 0.393, 0.443, 0.461, 0.461, 0.461", \
			  "0.403, 0.411, 0.435, 0.468, 0.468, 0.468, 0.468", \
			  "0.474, 0.480, 0.480, 0.480, 0.480, 0.480, 0.480", \
			  "0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491", \
			  "0.503, 0.503, 0.503, 0.503, 0.503, 0.503, 0.503" \
			)
			}
			fall_transition(RA1SHD_2048x32M8_load_template) {
			index_1 ("0.022, 0.062, 0.182, 0.432, 0.852, 2.112, 3.422");
			values ("0.039, 0.051, 0.089, 0.166, 0.296, 0.687, 1.093")
		}	}
        }

	pin(CLK) {
		direction : input;
		capacitance : 0.288
		clock	: true;
		min_pulse_width_low	: 0.131;
		min_pulse_width_high	: 0.074;
		min_period		: 0.923;
		max_transition		: 2.000;
		internal_power(){
			when : "(!CEN \
                                 & WEN[3] \
                                 & WEN[2] \
                                 & WEN[1] \
                                 & WEN[0] \
                        	)";
			rise_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("166.263, 166.263")
        		}
			fall_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
		internal_power(){
            		when : "(!CEN & !( \
                            	WEN[3] & \
                            	WEN[2] & \
                            	WEN[1] & \
                            	WEN[0]))";
        		rise_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("226.954, 226.954")
        		}
        		fall_power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
            			index_1 ("0.0 1.0");
            			values ("0.0, 0.0")
        		}
		}
         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("0.114, 0.114")
                 }
         }
	}

	pin(CEN) {
		direction : input;
		capacitance : 0.014;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.316, 0.316, 0.314, 0.309, 0.317, 0.372, 0.427", \
			  "0.311, 0.310, 0.308, 0.304, 0.311, 0.366, 0.422", \
			  "0.291, 0.290, 0.288, 0.284, 0.291, 0.346, 0.401", \
			  "0.250, 0.250, 0.247, 0.243, 0.251, 0.306, 0.361", \
			  "0.183, 0.182, 0.180, 0.176, 0.183, 0.238, 0.293", \
			  "0.115, 0.114, 0.112, 0.108, 0.116, 0.171, 0.226", \
			  "0.047, 0.047, 0.045, 0.041, 0.048, 0.103, 0.158" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.316, 0.316, 0.314, 0.309, 0.317, 0.372, 0.427", \
			  "0.311, 0.310, 0.308, 0.304, 0.311, 0.366, 0.422", \
			  "0.291, 0.290, 0.288, 0.284, 0.291, 0.346, 0.401", \
			  "0.250, 0.250, 0.247, 0.243, 0.251, 0.306, 0.361", \
			  "0.183, 0.182, 0.180, 0.176, 0.183, 0.238, 0.293", \
			  "0.115, 0.114, 0.112, 0.108, 0.116, 0.171, 0.226", \
			  "0.047, 0.047, 0.045, 0.041, 0.048, 0.103, 0.158" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.004, 0.011, 0.018", \
			  "0.031, 0.031, 0.034, 0.038, 0.045, 0.052, 0.059", \
			  "0.098, 0.099, 0.101, 0.105, 0.112, 0.119, 0.126", \
			  "0.166, 0.167, 0.169, 0.173, 0.180, 0.187, 0.194", \
			  "0.234, 0.234, 0.236, 0.240, 0.247, 0.254, 0.261" \
			)
				
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.004, 0.011, 0.018", \
			  "0.031, 0.031, 0.034, 0.038, 0.045, 0.052, 0.059", \
			  "0.098, 0.099, 0.101, 0.105, 0.112, 0.119, 0.126", \
			  "0.166, 0.167, 0.169, 0.173, 0.180, 0.187, 0.194", \
			  "0.234, 0.234, 0.236, 0.240, 0.247, 0.254, 0.261" \
			)
	}	}	}


	pin(OEN)	{
		direction	 : input;
		capacitance : 0.010;
	}
	bus(WEN)	 {
		bus_type : RA1SHD_2048x32M8_WRITE;
		direction : input;
		capacitance : 0.138;
		timing() {
			related_pin	: "CLK" ;
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.245, 0.246, 0.250, 0.282, 0.341, 0.400, 0.460", \
			  "0.239, 0.240, 0.244, 0.276, 0.336, 0.395, 0.454", \
			  "0.219, 0.220, 0.224, 0.256, 0.315, 0.375, 0.434", \
			  "0.179, 0.180, 0.183, 0.215, 0.275, 0.334, 0.394", \
			  "0.111, 0.112, 0.116, 0.148, 0.207, 0.267, 0.326", \
			  "0.044, 0.045, 0.048, 0.080, 0.140, 0.199, 0.259", \
			  "0.035, 0.036, 0.039, 0.060, 0.119, 0.179, 0.238" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.245, 0.246, 0.250, 0.282, 0.341, 0.400, 0.460", \
			  "0.239, 0.240, 0.244, 0.276, 0.336, 0.395, 0.454", \
			  "0.219, 0.220, 0.224, 0.256, 0.315, 0.375, 0.434", \
			  "0.179, 0.180, 0.183, 0.215, 0.275, 0.334, 0.394", \
			  "0.111, 0.112, 0.116, 0.148, 0.207, 0.267, 0.326", \
			  "0.044, 0.045, 0.048, 0.080, 0.140, 0.199, 0.259", \
			  "0.035, 0.036, 0.039, 0.060, 0.119, 0.179, 0.238" \
			)
		}	}
		timing() {
			related_pin	: "CLK" ;
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.007, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.074, 0.070, 0.052, 0.038, 0.026, 0.014, 0.002" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.007, 0.002, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.074, 0.070, 0.052, 0.038, 0.026, 0.014, 0.002" \
			)
	}	}	}

	bus(A)  {
		bus_type : RA1SHD_2048x32M8_ADDRESS;
		direction : input;
		capacitance : 0.047;
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.275, 0.276, 0.279, 0.285, 0.296, 0.306, 0.319", \
			  "0.270, 0.270, 0.274, 0.280, 0.290, 0.300, 0.314", \
			  "0.249, 0.250, 0.253, 0.260, 0.270, 0.280, 0.294", \
			  "0.209, 0.210, 0.213, 0.219, 0.229, 0.240, 0.253", \
			  "0.141, 0.142, 0.145, 0.151, 0.162, 0.172, 0.186", \
			  "0.074, 0.075, 0.078, 0.084, 0.094, 0.105, 0.118", \
			  "0.006, 0.007, 0.010, 0.016, 0.027, 0.037, 0.051" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.275, 0.276, 0.279, 0.285, 0.296, 0.306, 0.319", \
			  "0.270, 0.270, 0.274, 0.280, 0.290, 0.300, 0.314", \
			  "0.249, 0.250, 0.253, 0.260, 0.270, 0.280, 0.294", \
			  "0.209, 0.210, 0.213, 0.219, 0.229, 0.240, 0.253", \
			  "0.141, 0.142, 0.145, 0.151, 0.162, 0.172, 0.186", \
			  "0.074, 0.075, 0.078, 0.084, 0.094, 0.105, 0.118", \
			  "0.006, 0.007, 0.010, 0.016, 0.027, 0.037, 0.051" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.010, 0.009, 0.006, 0.000, 0.000, 0.000, 0.000", \
			  "0.015, 0.015, 0.012, 0.005, 0.000, 0.000, 0.000", \
			  "0.036, 0.035, 0.032, 0.026, 0.015, 0.005, 0.000", \
			  "0.076, 0.075, 0.072, 0.066, 0.056, 0.045, 0.035", \
			  "0.144, 0.143, 0.140, 0.134, 0.123, 0.113, 0.103", \
			  "0.211, 0.211, 0.207, 0.201, 0.191, 0.180, 0.170", \
			  "0.279, 0.278, 0.275, 0.269, 0.258, 0.248, 0.238" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.010, 0.006, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.015, 0.012, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.035, 0.032, 0.020, 0.000, 0.000, 0.000, 0.000", \
			  "0.076, 0.073, 0.060, 0.035, 0.000, 0.000, 0.000", \
			  "0.143, 0.140, 0.128, 0.103, 0.061, 0.019, 0.000", \
			  "0.211, 0.208, 0.195, 0.170, 0.128, 0.087, 0.045", \
			  "0.279, 0.275, 0.263, 0.238, 0.196, 0.154, 0.113" \
			)
	}	}	

         internal_power(){
                 when : "CEN";
                 power(RA1SHD_2048x32M8_passive_energy_template_1x2) {
                         index_1 ("0.0 1.0");
                         values ("2.007, 2.007")
                 }
         }

}
	bus(D)	 {
		bus_type : RA1SHD_2048x32M8_DATA;
		direction : input;
		capacitance : 0.003;
		memory_write() {
			address : A;
			clocked_on : "CLK";
		}
		timing() {
			related_pin	: "CLK"
			timing_type	: setup_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.238, 0.238, 0.241, 0.247, 0.278, 0.358, 0.437", \
			  "0.232, 0.233, 0.236, 0.241, 0.273, 0.352, 0.432", \
			  "0.212, 0.213, 0.215, 0.221, 0.253, 0.332, 0.412", \
			  "0.171, 0.172, 0.175, 0.181, 0.212, 0.292, 0.371", \
			  "0.104, 0.105, 0.107, 0.113, 0.144, 0.224, 0.304", \
			  "0.036, 0.037, 0.040, 0.045, 0.077, 0.157, 0.236", \
			  "0.000, 0.000, 0.000, 0.000, 0.009, 0.089, 0.169" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.238, 0.238, 0.241, 0.247, 0.278, 0.358, 0.437", \
			  "0.232, 0.233, 0.236, 0.241, 0.273, 0.352, 0.432", \
			  "0.212, 0.213, 0.215, 0.221, 0.253, 0.332, 0.412", \
			  "0.171, 0.172, 0.175, 0.181, 0.212, 0.292, 0.371", \
			  "0.104, 0.105, 0.107, 0.113, 0.144, 0.224, 0.304", \
			  "0.036, 0.037, 0.040, 0.045, 0.077, 0.157, 0.236", \
			  "0.000, 0.000, 0.000, 0.000, 0.009, 0.089, 0.169" \
			)
		}	}
		timing() {
			related_pin	: "CLK"
			timing_type	: hold_rising ;
			rise_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.017, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.091, 0.085, 0.061, 0.013, 0.000, 0.000, 0.000", \
			  "0.159, 0.152, 0.128, 0.081, 0.017, 0.007, 0.000", \
			  "0.226, 0.220, 0.196, 0.148, 0.084, 0.075, 0.065" \
			)
			}
			fall_constraint(RA1SHD_2048x32M8_constraint_template) {
			index_1 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			index_2 ("0.010, 0.050, 0.200, 0.500, 1.000, 1.500, 2.000");
			values ( \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.000, 0.000, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.023, 0.017, 0.000, 0.000, 0.000, 0.000, 0.000", \
			  "0.091, 0.085, 0.061, 0.013, 0.000, 0.000, 0.000", \
			  "0.159, 0.152, 0.128, 0.081, 0.017, 0.007, 0.000", \
			  "0.226, 0.220, 0.196, 0.148, 0.084, 0.075, 0.065" \
			)
		}	}
	}

	cell_leakage_power : 6.04E-3;
  }
}